@page "/register"
@inject UserService userService
@inject NavigationManager Nav



@using PizzaStoreApp.Shared.Models;

@if (registrationSuccessful)
{
    <div class="alert alert-success mt-3">
        ✅ Inscription réussie. Redirection vers la page de connexion...
    </div>

    <div class="spinner-border text-success mt-2" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="register-container">
        <h3>Créer un compte</h3>

        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />

            <InputText @bind-Value="registerModel.Username" placeholder="Nom d'utilisateur" class="form-control" />
            <ValidationMessage For="@(() => registerModel.Username)" />

            @if (errorMessage?.Contains("Nom", StringComparison.OrdinalIgnoreCase) == true)
            {
                <div class="text-danger">@errorMessage</div>
            }

            <InputText @bind-Value="registerModel.Email" placeholder="Email" class="form-control mt-2" />
            <ValidationMessage For="@(() => registerModel.Email)" />

            @if (errorMessage?.Contains("Adresse", StringComparison.OrdinalIgnoreCase) == true)
            {
                <div class="text-danger">@errorMessage</div>
            }

            <InputText @bind-Value="registerModel.Password" placeholder="Mot de passe" type="password" class="form-control mt-2" />
            <ValidationMessage For="@(() => registerModel.Password)" />

            <InputText @bind-Value="registerModel.ConfirmPassword" placeholder="Confirmer le mot de passe" type="password" class="form-control mt-2" />
            <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />

            <button type="submit" class="btn btn-success inscription-button">S'inscrire</button>
        </EditForm>


        <p class="mt-3">
            <a href="/login">Déjà un compte ? Se connecter</a>
        </p>
    </div>
}



@code {
    private RegisterUserDto registerModel = new();
    private string? errorMessage;
    private bool registrationSuccessful = false;

    private async Task HandleRegister()
    {
        errorMessage = null;

        var result = await userService.RegisterAsync(registerModel);

        if (result is null)
        {
            registrationSuccessful = true;
            StateHasChanged(); // force la mise à jour si nécessaire
            Nav.NavigateTo("/login");
        }
        else
        {
            errorMessage = result;
        }
    }
}
